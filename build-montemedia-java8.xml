<?xml version="1.0" encoding="UTF-8"?>
<project name="MonteMedia" default="all" basedir="."
         xmlns:if="ant:if"
         xmlns:unless="ant:unless">
    <target name="init">
        <exec executable="git" outputproperty="git.hash.date.author" failifexecutionfails="false" errorproperty="">
            <arg value="log"/>
            <arg value="-1"/>
            <arg value="--pretty=format:%h %cI %cn"/>
        </exec>
        <exec executable="git" outputproperty="git.describe" failifexecutionfails="false" errorproperty="">
            <arg value="describe"/>
            <arg value="--tags"/>
            <arg value="--always"/>
            <arg value="HEAD"/>
        </exec>
        <property name="name" value="${ant.project.name}"/>
        <property name="license.name" value="MIT License"/>
        <property name="license" value="${license.name}. https://opensource.org/licenses/mit-license.php"/>
        <property name="version" value="${git.describe}"/>
        <property name="author" value="Werner Randelshofer. http://www.randelshofer.ch"/>
        <echo message="${name} ${version} / desc:${git.describe} rev:${git.hash.date.author}"/>
        
        <property name="srcdir" value="src"/>
        <property name="classdir" value="build/classes8"/>
        <property name="libdir" value="lib"/>
        <property name="jardir" value="build/jar8"/>
        <property name="distdir" value="dist/${name}-${version}-java8"/>
        <property name="docdir" value="build/javadoc8"/>
    </target>
    <target name="clean" depends="init">
        <delete dir="${classdir}"/>
        <delete dir="${docdir}"/>
        <delete dir="${jardir}"/>
        <delete dir="${distdir}"/>
    </target>
    
    <target name="javadoc" depends="init">
        <mkdir dir="${docdir}" />
        
        <pathconvert property="moduleList" pathsep=":" >
            <map from="${basedir}/" to=""/>
            <dirset dir="${srcdir}" includes="*" excludes="resources"/>
        </pathconvert>
        
        <javadoc destdir="${docdir}"
        doctitle="${name} ${version}"
        header="${name} ${version}"
        footer="${license.name}"
        encoding="UTF-8"
        sourcepath="${moduleList}"
        >
            <classpath>
                <fileset dir="${libdir}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javadoc>
        
        <jar destfile="${distdir}/${name}-javadoc.jar">
           <manifest>
               <attribute name="Implementation-Title" value="${name}"/>
               <attribute name="Implementation-Version" value="${version}"/>
               <attribute name="Implementation-Vendor" value="${author}"/>
               <attribute name="License" value="${license}"/>
           </manifest>
           <fileset dir="${docdir}">
               <exclude name="**/.*"/>
           </fileset>
       </jar>
    </target>
    <target name="compile" depends="init">
        <mkdir dir="${classdir}" />
        
        <pathconvert property="srcdirs" pathsep=":" >
            <map from="${basedir}/" to=""/>
            <dirset dir="${srcdir}" includes="*"/>
        </pathconvert>
        <echo message="${srcdirs}"/>
        
        
        <javac
            source="1.8"
            target="1.8"
            destdir="${classdir}"
            debug="true"
            srcdir="${srcdirs}" 
            classpath="${libdir}/jmf.jar"
            includeantruntime="false"
        >
            <exclude name="**/module-info.java"/>
        </javac>
        <copy todir="${classdir}">
            <fileset dir="${srcdir}/org.monte.demo.screenrecorder">
                <exclude name="**/*.java"/>
                <exclude name="**/.*"/>
            </fileset>
            <fileset dir="${srcdir}/org.monte.media">
                <exclude name="**/*.java"/>
                <exclude name="**/.*"/>
            </fileset>
            <fileset dir="${srcdir}/resources">
                <exclude name="**/*.java"/>
                <exclude name="**/.*"/>
            </fileset>
        </copy>
    </target>
    <macrodef name="makejars">
        <sequential>
            <makeclassjar />
            <makesourcejar />
            <makepom />
        </sequential>
    </macrodef>
    <macrodef name="makeclassjar">
        <sequential>
            <mkdir dir="${distdir}" />
            <jar destfile="${distdir}/${name}.jar">
                <manifest>
                    <attribute name="Implementation-Title" value="${name}"/>
                    <attribute name="Implementation-Version" value="${version}"/>
                    <attribute name="Implementation-Vendor" value="${author}"/>
                    <attribute name="Main-Class" value="org.monte.media.screenrecorder.Main"/>
                    <attribute name="License" value="${license}"/>
                </manifest>
                <fileset dir="${classdir}">
                    <exclude name="**/.*"/>
                </fileset>
                <fileset dir=".">
                    <include name="*.md"/>
                </fileset>
            </jar>
        </sequential>
    </macrodef>
    <macrodef name="makesourcejar">
        <sequential>
            <mkdir dir="${distdir}" />
            <copy todir="${jardir}/sources">
                <fileset dir="${srcdir}/org.monte.demo.animmerger" excludes="**/.*"/>
                <fileset dir="${srcdir}/org.monte.demo.audiorecorder" excludes="**/.*"/>
                <fileset dir="${srcdir}/org.monte.demo.aviwriter" excludes="**/.*"/>
                <fileset dir="${srcdir}/org.monte.demo.cleartype" excludes="**/.*"/>
                <fileset dir="${srcdir}/org.monte.demo.cmykimageviewer" excludes="**/.*"/>
                <fileset dir="${srcdir}/org.monte.demo.imageioviewer" excludes="**/.*"/>
                <fileset dir="${srcdir}/org.monte.demo.io" excludes="**/.*"/>
                <fileset dir="${srcdir}/org.monte.demo.jmfavi" excludes="**/.*"/>
                <fileset dir="${srcdir}/org.monte.demo.jmftsccdemo" excludes="**/.*"/>
                <fileset dir="${srcdir}/org.monte.demo.movieconverter" excludes="**/.*"/>
                <fileset dir="${srcdir}/org.monte.demo.moviemaker" excludes="**/.*"/>
                <fileset dir="${srcdir}/org.monte.demo.mpoimagesplitter" excludes="**/.*"/>
                <fileset dir="${srcdir}/org.monte.demo.quicktimewriter" excludes="**/.*"/>
                <fileset dir="${srcdir}/org.monte.demo.rationalnumber" excludes="**/.*"/>
                <fileset dir="${srcdir}/org.monte.demo.screenrecorder" excludes="**/.*"/>
                <fileset dir="${srcdir}/org.monte.media" excludes="**/.*"/>
                <fileset dir="${srcdir}/org.monte.media.jmf" excludes="**/.*"/>
                <filterset begintoken="$" endtoken="$">
                    <filter token="Id" value="$Id: ${git.hash.date.author} $"/>
                </filterset>
            </copy>
            <jar destfile="${distdir}/${name}-sources.jar">
                <manifest>
                    <attribute name="Implementation-Title" value="${name}"/>
                    <attribute name="Implementation-Version" value="${version}"/>
                    <attribute name="Implementation-Vendor" value="${author}"/>
                    <attribute name="License" value="${license}"/>
                </manifest>
                <fileset dir="${jardir}/sources">
                    <exclude name="**/.*"/>
                </fileset>
                <fileset dir=".">
                    <include name="*.md"/>
                </fileset>
            </jar>
        </sequential>
    </macrodef>
    <macrodef name="makepom">
        <sequential>
            <mkdir dir="${distdir}" />
            <copy file="pom-template.xml" tofile="${distdir}/pom.xml" >
                <filterset>
                    <filter token="name" value="${name}"/>
                    <filter token="module" value="${name}"/>
                    <filter token="version" value="${version}"/>
                </filterset>
            </copy>
        </sequential>
    </macrodef>
    <target name="jar" depends="compile">
            <makejars/>
    </target>
    
    <target depends="init" name="run JMF Registry">
        <java classname="JMFRegistry"
         classpath="${classdir}:${libdir}/jmf.jar"
         failonerror="true" fork="true"
         >
            <jvmarg value="-Xmx1024M"/>
            <jvmarg value="-Dapple.laf.useScreenMenuBar=true"/>
            <jvmarg value="-Dcom.apple.macos.useScreenMenuBar=true"/>
            <jvmarg value="-Djava.library.path=${lib}"/>
        </java>
    </target>
    <target depends="init" name="run JMF Player">
        <java classname="JMStudio"
         classpath="${libdir}/jffmpeg-1.1.0.jar:${lib}/mp3plugin.jar:${classdir}:${libdir}/jmf.jar"
         failonerror="true" fork="true"
         >
            <!--jvmarg value="-verbose"/-->
            <jvmarg value="-Xmx1024M"/>
            <jvmarg value="-Dapple.laf.useScreenMenuBar=true"/>
            <jvmarg value="-Dcom.apple.macos.useScreenMenuBar=true"/>
            <jvmarg value="-Djava.library.path=${lib}"/>
        </java>
    </target>    
    
    <target name="dist" depends="clean,compile,jar,javadoc">
        <copy todir="${distdir}">
            <fileset dir=".">
                <include name="*.md"/>
            </fileset>
        </copy>
    </target>
    <target name="all" depends="clean,dist">
    </target>
</project>
